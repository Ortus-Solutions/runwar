# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by separate terms of service, privacy policy, and support documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Runwar CI

# If your target is master or develop branch
on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

  # We get the required keys
  workflow_call:
    secrets:
      AWS_ACCESS_KEY:
        required: true
      AWS_ACCESS_SECRET:
        required: true

jobs:
  build:

    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    # Do the build
    - name: Build with Gradle
      run: ./gradlew

  upload:
    # Run the upload on master branch
    if: ${{ github.ref == 'refs/heads/master' }}

    runs-on: ubuntu-latest

    # Depends on previous job
    needs: build

    steps:
    - name: Upload JAR to S3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read
      env:
        AWS_S3_BUCKET: "downloads.ortussolutions.com"
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}
        SOURCE_DIR: "dist/libs/"
        DEST_DIR: "cfmlprojects/runwar/"
